
//https://stackoverflow.com/questions/42609768/typescript-error-cannot-write-file-because-it-would-overwrite-input-file
{
  "compilerOptions": {
    "baseUrl": ".",
    // "rootDir": ".",
    "outDir": "dist",
    // "sourceMap": false,

    "noImplicitThis": false,
    "noImplicitAny": false,
    "strictNullChecks": false,
    // "allowJs": false, //This doesn't work well with TS.  Having this single option 'either true or false',doesn't generate the types
    "types":["node","vite/client"],
    "importHelpers": true,
    "moduleResolution": "Node",
    "target": "ESNext",
    "declaration": true,
    "useDefineForClassFields": true,
    "module": "ESNext",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "esModuleInterop": true,
    "lib": ["ESNext", "DOM", "dom.iterable", "scripthost"],
    "skipLibCheck": true,
    // "noEmit": true,  //This will not emit any type from typescript
    // "strict": true,
    "paths": {
      //Direct
      "@": ["./lib"],
      "@components": ["./lib/components"],
      "@enums":["./lib/enums"],
      "@functions":["./lib/functions"],

      // //Sub Locations
      "@/*": ["@/*"],
      "@components/*": ["@components/*"],
      "@lib/*":["@lib/*"],
      "@enums/*":["@enums/*"],
      "@functions/*":["./lib/functions/*"],
    }
  },
  "include": [ //Types will be created for whatever folder , we include here.
    // "src/**/*.ts", 
    // "src/**/*.tsx", 
    // "src/**/*.vue",
    // "src/**/*.d.ts", 
    // "src/components",
    // "src/*.d.ts",
    //Include so that library can be built
    "lib", //This is enough
    "lib/**/*.ts",
    "lib/**/*.tsx",
    "lib/**/*.vue",
    "lib/globals-types.ts"
  ],
  "exclude": [
    // "./dist/**/*", //Exclude the dist folder
    // "./lib",
    "node_modules",
    "src"
  ],
  "references": [{ "path": "./tsconfig.node.json" }]
}
